<Activity mc:Ignorable="sap sap2010" x:Class="PlayRound" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="io_CardHasBeenUsed" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="io_GameOver" Type="InOutArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1266,2235</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PlayRound_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="PlayRound" sap:VirtualizedContainerService.HintSize="1276,2170" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TopWaste" />
      <Variable x:TypeArguments="s:String[]" Name="TopFoundations" />
      <Variable x:TypeArguments="sd:DataTable[]" Name="Tableau" />
      <Variable x:TypeArguments="s:Int32[]" Name="GamePlayColumnOrder" />
      <Variable x:TypeArguments="x:Boolean" Name="boolActionTaken" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1214,90" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="PlayRound: workflow started" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetCurrentStatus.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="1214,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="GetCurrentStatus.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_TopWaste">[TopWaste]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
        <OutArgument x:TypeArguments="s:String[]" x:Key="out_TopFoundations">[TopFoundations]</OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable[]" x:Key="out_Tableau">[Tableau]</OutArgument>
        <OutArgument x:TypeArguments="s:Int32[]" x:Key="out_GamePlayColumnOrder">[GamePlayColumnOrder]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[TopWaste is Nothing]" DisplayName="If - Check Top Waste - Ensure there is a card (occasionally draw pile will be depleted and not reset a new card)" sap:VirtualizedContainerService.HintSize="1214,536" sap2010:WorkflowViewState.IdRef="If_18">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,354" sap2010:WorkflowViewState.IdRef="Sequence_48">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AdvanceWaste.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="AdvanceWaste.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_CardHasBeenUsed">[io_CardHasBeenUsed]</InOutArgument>
              <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_GameOver">[io_GameOver]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetCurrentStatus.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="GetCurrentStatus.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TopWaste">[TopWaste]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
              <OutArgument x:TypeArguments="s:String[]" x:Key="out_TopFoundations">[TopFoundations]</OutArgument>
              <OutArgument x:TypeArguments="sd:DataTable[]" x:Key="out_Tableau">[Tableau]</OutArgument>
              <OutArgument x:TypeArguments="s:Int32[]" x:Key="out_GamePlayColumnOrder">[GamePlayColumnOrder]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49" />
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1214,82" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Flowchart sap:VirtualizedContainerService.HintSize="1214,948" sap2010:WorkflowViewState.IdRef="Flowchart_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,75</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">270,40 130,40 130,58.53999999999999</av:PointCollection>
          <x:Double x:Key="Width">1180.5</x:Double>
          <x:Double x:Key="Height">911.0799999999999</x:Double>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID10</x:Reference>
      </Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,189.5</av:Point>
            <av:Size x:Key="ShapeSize">200,81</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,270.5 360,336.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Sequence - move cards from tableau or waste to foundation?" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="814,280" sap2010:WorkflowViewState.IdRef="CommentOut_8">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_61">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="PlayRound: Begin Search for Cards (from Tableau) to Foundation Logic...." />
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="814,3230" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[TopFoundations]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="currentFoundation" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="780,3044" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[currentFoundation isnot nothing]" sap:VirtualizedContainerService.HintSize="738,2956" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="704,2774" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="currentColumn" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="sd:DataTable" CurrentIndex="[currentColumn]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="662,973" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Tableau]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataTable">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataTable" Name="currentTableau" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,787" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[if(currentTableau.Rows.Count=0,False,currentTableau.Rows(currentTableau.Rows.Count-1).Item(&quot;cardSuite&quot;).Equals(currentFoundation.Split(&quot;|&quot;c)(0)) And currentTableau.Rows(currentTableau.Rows.Count-1).Item(&quot;cardValue&quot;).ToString.Equals((CInt(currentFoundation.Split(&quot;|&quot;c)(1)) + 1).ToString))]" DisplayName="If - current column matches a foundation (to promote) - move card to foundation" sap:VirtualizedContainerService.HintSize="510,699" sap2010:WorkflowViewState.IdRef="If_2">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476,517" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="PlayRound: Found Card in Tableau to Promote to Foundation" />
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_ToFoundation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="MoveCard_ToFoundation.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ColumnNumber">[currentColumn.ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CardNumber">[currentTableau.Rows.Count.ToString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_2">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:Break DisplayName="Break - exit out of loop - a card has been promoted to a foundation" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <If Condition="[boolActionTaken]" DisplayName="If - check to exit primary loop - if a card has been promoted to a foundation" sap:VirtualizedContainerService.HintSize="662,1673" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Break sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_2" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="628,1378" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="586,280" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="PlayRound: Begin Search for Cards (from Waste) to Foundation Logic...." />
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <If Condition="[not TopWaste is nothing]" sap:VirtualizedContainerService.HintSize="586,970" sap2010:WorkflowViewState.IdRef="If_20">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="552,788" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[(TopWaste.Split(&quot;|&quot;c)(0).Equals(currentFoundation.Split(&quot;|&quot;c)(0)) And TopWaste.Split(&quot;|&quot;c)(1).Equals((CInt(currentFoundation.Split(&quot;|&quot;c)(1)) + 1).ToString))]" DisplayName="If - check to see if current waste can be promoted to a foundation" sap:VirtualizedContainerService.HintSize="510,700" sap2010:WorkflowViewState.IdRef="If_7">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="476,518" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="PlayRound: Found Card in Waste to Promote to Foundation" />
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_ToFoundation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="MoveCard_ToFoundation.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnNumber">[Nothing]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_CardNumber">[Nothing]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Break DisplayName="Break - exit out of loop - a card has been promoted to a foundation" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_4" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_53" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID2" Condition="[boolActionTaken]" DisplayName="Action Taken?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">320.5,336.5</av:Point>
                <av:Size x:Key="ShapeSize">79,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">320.5,380 123,380 123,730 153,730</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">399.5,380 429.5,380 429.5,390 490,390</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID0">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">153,689</av:Point>
                    <av:Size x:Key="ShapeSize">434,81</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">370,771 370,854</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[io_CardHasBeenUsed]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">270,854</av:Point>
                        <av:Size x:Key="ShapeSize">200,52</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line - Round Complete" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="PlayRound: Action for Round Has Been Completed... move to next round....">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </WriteLine>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">490,349.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,81</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">590,430.5 590,466.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sequence - move on Tableau" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="738,280" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_62">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="PlayRound: Begin Search for Cards (from Tableau) to other Columns Logic...." />
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="738,4267" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[GamePlayColumnOrder]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Int32">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="currentMoveFromColumn" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,4081" sap2010:WorkflowViewState.IdRef="Sequence_26">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="intTotalCardsInColumnPreFilter" />
                            <Variable x:TypeArguments="x:Boolean" Name="boolColumnHasFaceDownCards" />
                            <Variable x:TypeArguments="sd:DataTable" Name="MoveFromColumn" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:FilterDataTable DataTable="[Tableau(currentMoveFromColumn)]" DisplayName="Filter Data Table - remove all face down cards from current search (from) column" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[MoveFromColumn]" SelectColumnsMode="Remove">
                            <ui:FilterDataTable.Filters>
                              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                  <ui:FilterOperationArgument.Column>
                                    <InArgument x:TypeArguments="x:String">["isFaceUp"]</InArgument>
                                  </ui:FilterOperationArgument.Column>
                                  <ui:FilterOperationArgument.Operand>
                                    <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
                                  </ui:FilterOperationArgument.Operand>
                                </ui:FilterOperationArgument>
                              </scg:List>
                            </ui:FilterDataTable.Filters>
                            <ui:FilterDataTable.SelectColumns>
                              <scg:List x:TypeArguments="InArgument" Capacity="4">
                                <x:Null />
                              </scg:List>
                            </ui:FilterDataTable.SelectColumns>
                          </ui:FilterDataTable>
                          <If Condition="[MoveFromColumn.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="662,425" sap2010:WorkflowViewState.IdRef="If_13">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="PlayRound: All remaining columns are blank/empty; stop searching across the Tableau" />
                                <ui:Break sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_8" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37" />
                            </If.Else>
                          </If>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="662,280" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;PlayRound: Searching Column: &quot; + currentMoveFromColumn.ToString + &quot; -- in order to move card: &quot; + MoveFromColumn.Rows(0).Item(&quot;cardSuite&quot;).ToString + MoveFromColumn.Rows(0).Item(&quot;cardValue&quot;).ToString]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="662,2672" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[{0,1,2,3,4,5,6}]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Int32">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Int32" Name="currentMoveToColumn" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,2486" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[Tableau(currentMoveToColumn).Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="586,2398" sap2010:WorkflowViewState.IdRef="If_9">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="552,1108" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,280" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="PlayRound: Move To Column is Empty - Move a King Here?" />
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <If Condition="[((CInt(MoveFromColumn.Rows(0).Item(&quot;cardValue&quot;).ToString)).ToString).Equals(&quot;13&quot;) and Tableau(currentMoveFromColumn).Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="510,700" sap2010:WorkflowViewState.IdRef="If_14">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,518" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="[&quot;PlayRound: Found Card to Move on Tableau - Contains a King: Move From Column: &quot; + currentMoveFromColumn.ToString + &quot; -- to column: &quot; + currentMoveToColumn.ToString]" />
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_OnTableau.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="MoveCard_OnTableau.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromColumnNumber">[currentMoveFromColumn.ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromCardNumber">[MoveFromColumn.Rows(0).Item("cardIndex").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToColumnNumber">[currentMoveToColumn.ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToCardNumber">1</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:Break DisplayName="Break - exit out of loop - a card has been moved on the Tableau" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_9" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="552,1108" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,280" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="[&quot;PlayRound: Move To Column: &quot; + currentMoveToColumn.ToString + &quot; -- current card is: &quot; + Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;cardSuite&quot;).ToString + Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;cardValue&quot;).ToString]" />
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <If Condition="[(((CInt(MoveFromColumn.Rows(0).Item(&quot;cardValue&quot;).ToString) + 1).ToString).Equals(Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;cardValue&quot;).ToString)) And &#xA;( Not MoveFromColumn.Rows(0).Item(&quot;isSuiteRed&quot;).ToString.Equals(Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;isSuiteRed&quot;).ToString) )]" sap:VirtualizedContainerService.HintSize="510,700" sap2010:WorkflowViewState.IdRef="If_10">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,518" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="[&quot;PlayRound: Found Card to Move on Tableau:  Move From Column: &quot; + currentMoveFromColumn.ToString + &quot; -- in order to move card: &quot; + MoveFromColumn.Rows(0).Item(&quot;cardSuite&quot;).ToString + MoveFromColumn.Rows(0).Item(&quot;cardValue&quot;).ToString + &quot; to Column: &quot; + currentMoveToColumn.ToString + &quot; -- current card is: &quot; + Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;cardSuite&quot;).ToString + Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item(&quot;cardValue&quot;).ToString]" />
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_OnTableau.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="MoveCard_OnTableau.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromColumnNumber">[currentMoveFromColumn.ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromCardNumber">[MoveFromColumn.Rows(0).Item("cardIndex").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToColumnNumber">[currentMoveToColumn.ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToCardNumber">[Tableau(currentMoveToColumn).Rows(Tableau(currentMoveToColumn).Rows.Count-1).Item("cardIndex").ToString]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:Break DisplayName="Break - exit out of loop - a card has been moved on the Tableau" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_5" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <If Condition="[boolActionTaken]" DisplayName="If - check to exit primary loop - if a card has been moved on the Tableau" sap:VirtualizedContainerService.HintSize="662,295" sap2010:WorkflowViewState.IdRef="If_11">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,113" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Break sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Break_6" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID4" Condition="[boolActionTaken]" DisplayName="Action Taken?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2" True="{x:Reference __ReferenceID0}">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">550.5,466.5</av:Point>
                        <av:Size x:Key="ShapeSize">79,87</av:Size>
                        <av:PointCollection x:Key="TrueConnector">550.5,510 370,510 370,689</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">629.5,510 770,510 770,549.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">670,549.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,81</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">770,630.5 770,686.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Sequence - move from Waste to Tableau?" sap:VirtualizedContainerService.HintSize="800,3627" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="columnIndex" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="738,280" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="PlayRound: Begin Search to move from Waste to Tableau...." />
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <ui:ForEach x:TypeArguments="sd:DataTable" CurrentIndex="[columnIndex]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="738,3196" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Tableau]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="sd:DataTable">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataTable" Name="currentTableau" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,3010" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[currentTableau.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="662,2922" sap2010:WorkflowViewState.IdRef="If_15">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="552,917" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="WriteLine_27" Text="[&quot;PlayRound: Check to Move King as column (&quot; + columnIndex.ToString + &quot;) is Blank/Empty.&quot;]" />
                                        <If Condition="[TopWaste.Split(&quot;|&quot;c)(1).Equals(&quot;13&quot;)]" sap:VirtualizedContainerService.HintSize="510,699" sap2010:WorkflowViewState.IdRef="If_16">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,517" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_28" Text="[&quot;PlayRound: King Found at top of Waste AND column is blank/empty: &quot; + columnIndex.ToString + &quot; - moving King from Waste to Tableau....&quot;]" />
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_OnTableau.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="MoveCard_OnTableau.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromColumnNumber">[Nothing]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FromCardNumber">[Nothing]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToColumnNumber">[columnIndex.ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToCardNumber">1</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_10" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="628,1823" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="586,280" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_30" Text="[&quot;PlayRound: Check column (&quot; + columnIndex.ToString + &quot;) to move waste to Tableau....&quot;]" />
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <If Condition="[not TopWaste is nothing]" sap:VirtualizedContainerService.HintSize="586,1415" sap2010:WorkflowViewState.IdRef="If_21">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="552,868" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[(CInt(TopWaste.Split(&quot;|&quot;c)(1)) +1).ToString.Equals(currentTableau.Rows(currentTableau.Rows.Count-1).Item(&quot;cardValue&quot;).ToString) And&#xA;( Not If(TopWaste.Split(&quot;|&quot;c)(0).Equals(&quot;D&quot;),True,If(TopWaste.Split(&quot;|&quot;c)(0).Equals(&quot;H&quot;),True,False)).ToString.Equals(currentTableau.Rows(currentTableau.Rows.Count-1).Item(&quot;isSuiteRed&quot;).ToString) )]" sap:VirtualizedContainerService.HintSize="510,780" sap2010:WorkflowViewState.IdRef="If_17">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="476,518" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_31" Text="[&quot;PlayRound: Match Found at top of Waste: (&quot; + TopWaste.Split(&quot;|&quot;c)(1).ToString + &quot;) moving to Tableau column: &quot; + columnIndex.ToString]" />
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_OnTableau.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="MoveCard_OnTableau.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FromColumnNumber">[Nothing]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FromCardNumber">[Nothing]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_ToColumnNumber">[columnIndex.ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_ToCardNumber">1</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_11" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,365" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_33" Text="GAME OVER - Draw Pile Empty - no more possible moves detected." />
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[io_GameOver]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_12" />
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowDecision x:Name="__ReferenceID9" Condition="[boolActionTaken]" DisplayName="Action Taken?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4" True="{x:Reference __ReferenceID0}">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">730.5,686.5</av:Point>
                                <av:Size x:Key="ShapeSize">79,87</av:Size>
                                <av:PointCollection x:Key="TrueConnector">730.5,730 587,730</av:PointCollection>
                                <av:PointCollection x:Key="FalseConnector">809.5,730 930,730</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <FlowDecision.False>
                              <FlowStep x:Name="__ReferenceID5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">930,704</av:Point>
                                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">1030,756 1030,880 470,880</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AdvanceWaste.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="AdvanceWaste.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_CardHasBeenUsed">[io_CardHasBeenUsed]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_GameOver">[io_GameOver]</InOutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID1</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.False>
                          </FlowDecision>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <FlowStep x:Name="__ReferenceID10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,58.53999999999999</av:Point>
            <av:Size x:Key="ShapeSize">200,81</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,139.54 130,186.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Sequence - move aces to foundation (from waste and tableau)" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="currentColumn" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="586,280" sap2010:WorkflowViewState.IdRef="CommentOut_6">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="PlayRound: Begin Search for Aces (from Tableau) to Foundation Logic...." />
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:ForEach x:TypeArguments="sd:DataTable" CurrentIndex="[currentColumn]" DisplayName="For Each - check each Tableau column for an Ace" sap:VirtualizedContainerService.HintSize="586,974" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Tableau]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataTable">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataTable" Name="currentTableau" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,788" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[if(currentTableau.Rows.Count=0,False,currentTableau.Rows(currentTableau.Rows.Count-1).Item(&quot;cardValue&quot;).ToString.Equals(&quot;1&quot;))]" DisplayName="If - current column matches a foundation (to promote) - move card to foundation" sap:VirtualizedContainerService.HintSize="510,700" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,518" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="PlayRound: Found Ace in Tableau to Promote to Foundation" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_ToFoundation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="MoveCard_ToFoundation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ColumnNumber">[currentColumn.ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CardNumber">[currentTableau.Rows.Count.ToString]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break DisplayName="Break - exit out of loop - a card has been promoted to a foundation" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_3" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20" />
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="586,280" sap2010:WorkflowViewState.IdRef="CommentOut_7">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_60">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="PlayRound: Begin Search for Aces (from Waste) to Foundation Logic...." />
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <If Condition="[not TopWaste is nothing]" sap:VirtualizedContainerService.HintSize="586,905" sap2010:WorkflowViewState.IdRef="If_19">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="552,723" sap2010:WorkflowViewState.IdRef="Sequence_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[TopWaste.split(&quot;|&quot;c)(1).Equals(&quot;1&quot;)]" DisplayName="If - top of Waste is an Ace = Move to Foundation" sap:VirtualizedContainerService.HintSize="510,635" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,453" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="PlayRound: Found Ace in Waste to Promote to Foundation" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveCard_ToFoundation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="MoveCard_ToFoundation.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ColumnNumber">[Nothing]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CardNumber">[Nothing]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[boolActionTaken]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23" />
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51" />
            </If.Else>
          </If>
        </Sequence>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID7" Condition="[boolActionTaken]" DisplayName="Action Taken?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3" True="{x:Reference __ReferenceID0}" False="{x:Reference __ReferenceID6}">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">90.5,186.5</av:Point>
                <av:Size x:Key="ShapeSize">79,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">90.5,230 60.5,230 60.5,730 153,730</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">169.5,230 260,230</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1214,90" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="PlayRound: workflow ended" />
  </Sequence>
</Activity>